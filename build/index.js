(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var s=t.g.document;if(!n&&s&&(s.currentScript&&(n=s.currentScript.src),!n)){var e=s.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})();t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p;t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p;var n={components:{cartItem:{props:["cartItem","cartCount"],template:'<div class="cart-element">\n    <img\n      class="img-cart"\n      width="100px"\n      height="100px"\n      :src="cartItem.image"\n      alt="photo"\n    />\n    <div class="cart-info">\n      <h2 class="heading-cart">{{cartItem.product_name}}</h2>\n      <div class="rating-block">\n        <i class="fas fa-star"></i><i class="fas fa-star"></i\n        ><i class="fas fa-star"></i><i class="fas fa-star"></i\n        ><i class="fas fa-star-half-alt"></i>\n      </div>\n      <p class="count-cart">{{cartCount}}\n        x {{cartItem.price}}\n      </p>\n    </div>\n    <span\n      @click="$root.$refs.cart.removeProduct(cartItem)"\n      data-idSpan="cartItem.id_product"\n      class="delete-cart"\n    >\n      <i class="fas fa-times-circle"></i>\n    </span>\n  </div>\n</div>\n    '}},data:function(){return{isVisibleCart:!1,basket:[],productsRenderInBasket:[],allProducts:[]}},methods:{fetchGoods:function(){var t=this;this.$parent.getJson("/api/cart").then((function(n){t.basket=n.contents,t.productsRenderInBasket=t.basket,t.loadAllProducts()}))},loadAllProducts:function(){var t=this;this.$parent.getJson("/api/products").then((function(n){t.allProducts=n}))},addProduct:function(t){var n=this;this.productsRenderInBasket=[];var s=this.basket.find((function(n){return n.id_product===t}));if(s)this.$parent.putJson("/api/cart/".concat(s.id_product),{count:1}),s.count++;else{var e=this.allProducts.find((function(n){return n.id_product===t}));e.count=1,this.$parent.postJson("/api/cart",e).then((function(){n.basket.push(e)}))}this.productsRenderInBasket=this.basket},removeProduct:function(t){this.productsRenderInBasket=[],t.count>1?(t.count--,this.$parent.putJson("/api/cart/".concat(t.id_product),{count:-1})):(this.basket.splice(this.basket.indexOf(t),1),this.$parent.deleteJson("/api/cart/".concat(t.id_product),{count:find.count})),this.productsRenderInBasket=this.basket}},mounted:function(){this.fetchGoods()},computed:{recalculationTotalSum:function(){for(var t=0,n=0;n<this.productsRenderInBasket.length;n++)t+=this.productsRenderInBasket[n].count*this.productsRenderInBasket[n].price;return t},calculationCountLogo:function(){for(var t=0,n=0;n<this.productsRenderInBasket.length;n++)t+=this.productsRenderInBasket[n].count;return t}},template:'<div>\n  <span @click="isVisibleCart=!isVisibleCart" class="cart-details">\n                <img class="basket" src="image/logo_cart.svg" alt="cart" />\n                <span class="count-buy" v-if="basket.length>0"\n                  >{{calculationCountLogo}}</span\n                >\n              </span>\n              <div class="cart-block" v-show="isVisibleCart">\n              <div class="block-for-products">\n                <cart-item v-for="item of productsRenderInBasket" :key="item.id_product" :cartItem="item" :cartCount="item.count"></cart-item>\n                </div>\n                <div class="price-cart">\n                  <h2 class="total" v-if="basket.length!=0">\n                    total\n                    <span class="totalPrice"\n                      >$ {{recalculationTotalSum.toFixed(2)}}</span\n                    >\n                  </h2>\n                  <h2 class="total" v-else>Товаров нет</h2>\n                </div>\n                <div class="button-cart">\n                  <a href="checkout.html" class="link-checkout">CHECKOUT </a>\n                  <a href="shopping_cart.html" class="link-checkout go-to-cart"\n                    >GO TO CART\n                  </a>\n                </div>\n              </div></div>'};const s={data:function(){return{searchLine:""}},template:'<form action="#" method="get">\n  <input\n                  class="input"\n                  type="text"\n                  placeholder="Search for Item..."\n                  v-model="searchLine"\n                />\n                <button class="search" @click="$parent.$refs.products.filterGoods(searchLine)" type="submit">\n                  <i class="fas fa-search"></i>\n                </button></form>'};var e={el:"#app",components:{cart:n,cartpage:{components:{cartElement:{props:["cartElement","cartCount"],template:'<div class="ElementOnCartPage product-details-element">\n      <div class="shopping-card-box">\n        <span class="link-shopping-card"\n          ><img\n            class="shopping-card"\n            :src="cartElement.image"\n            alt="photo"\n        /></span>\n        <div class="shopping-description">\n          <h2 class="heading-shopping">{{cartElement.product_name}}</h2>\n          <div class="rating-shopping-block">\n            <i class="fas fa-star"></i><i class="fas fa-star"></i\n            ><i class="fas fa-star"></i><i class="fas fa-star"></i\n            ><i class="fas fa-star-half-alt"></i>\n          </div>\n          <p class="text-shopping">\n            <span class="span-txt-shopping">Color:</span> Red\n          </p>\n          <p class="text-shopping">\n            <span class="span-txt-shopping">Size:</span> Xll\n          </p>\n        </div>\n      </div>\n      <div class="shopping-info">\n        <p class="text-shopping-info">$ {{cartElement.price}}</p>\n        <span class="shopping-form">\n          <p\n            class="shopping-input">{{cartCount}}\n            </p>\n        </span>\n        <p class="text-shopping-info shopping-info_margin">FREE</p>\n        <p class="text-shopping-info shopping-info_margin">$ {{cartElement.price*cartCount}}</p>\n        <span @click="$root.$refs.cart.removeProduct(cartElement)" class="delete-product"\n          ><i class="fas fa-times-circle"></i\n        ></span>\n      </div>\n  </div>'}},data:function(){return{}},methods:{},template:'<div>\n  <div v-if="$root.$refs.cart.productsRenderInBasket!=0">\n  <cart-element v-for="element of $root.$refs.cart.productsRenderInBasket" :key="element.id_product" :cartElement="element" :cartCount="element.count"></cart-element>\n  <div class="button-block">\n  <a href="#" class="shopping-button">give feedback</a>\n  <a href="index.html" class="shopping-button">cONTINUE sHOPPING</a>\n</div>\n</div>\n<div v-else><h2 class="emptyCart">Корзина пуста</h2>\n</div>\n<div class="container bottom-shopping-block">\n<form action="#" class="shipping-address" method="POST">\n<h1 class="heading-shipping-address">Shipping Adress</h1>\n<select class="select-address" id="address">\n  <option value="Bangladesh">Bangladesh</option>\n  <option value="Russia">Russia</option>\n  <option value="USA">USA</option>\n  <option value="Sweden">Sweden</option>\n</select>\n<input class="state" type="text" placeholder="State" />\n<input class="state" type="text" placeholder="Postcode / Zip" />\n<button class="get-a-quote" type="submit">get a quote</button>\n</form>\n<form action="#" class="shipping-address" method="POST">\n<h1 class="heading-shipping-address">coupon discount</h1>\n<p class="text-shipping-address">\n  Enter your coupon code if you have one\n</p>\n<input class="state" type="text" placeholder="State" />\n<button class="coupon" type="submit">Apply coupon</button>\n</form>\n<div class="proceed-to-checkout">\n<div class="text-check-block">\n\n</div>\n<a href="checkout.html" class="link-proceed">proceed to checkout</a>\n</div>\n</div>\n</div>\n\n\n'},error:{data:function(){return{text:""}},methods:{setError:function(t){this.text=t}},computed:{isVisible:function(){return""!==this.text}},template:'\n    <div class="error-block" v-if="isVisible"> \n        <p class="error-msg">\n            <button class="close-btn" @click="setError(\'\')">&times;</button>\n            {{ text }}\n        </p>\n    </div>'},filtered:s,products:{components:{product:{props:["product"],template:'\n  <li\n                class="item-products card-icon"\n              >\n              \n                <span @click="$root.$refs.products.addPage(product.id_product)" \n                class="card-link">\n                  <div class="picture-card">\n                    <img class="img-product" :src="product.image" alt="photo" />\n                  </div>\n                  <h4 class="name-product">{{product.product_name}}</h4>\n                  <div class="text-rating-block">\n                    <p class="price">$ {{product.price.toFixed(2)}}</p>\n                    <div class="rating-product">\n                      <i class="fas fa-star"></i>\n                      <i class="fas fa-star"></i>\n                      <i class="fas fa-star"></i>\n                      <i class="fas fa-star"></i>\n                      <i class="fas fa-star"></i>\n                    </div>\n                  </div>\n                </span>\n                <button\n                  @click="$root.$refs.cart.addProduct(product.id_product)"\n                  data-id="product.id_product"\n                  class="add-product"\n                >\n                  <img\n                    class="cart"\n                    src="image/white-cart.svg"\n                    alt="white-cart"\n                  />\n                  Add to cart\n                </button>\n              </li>'},filtered:s},data:function(){return{catalogUrl:"/catalogData.json",allProducts:[],filteredGoods:[]}},methods:{filterGoods:function(){var t=new RegExp(this.$root.$refs.filtered.searchLine,"i");this.filteredGoods=[];for(var n=0;n<this.allProducts.length;n++)this.allProducts[n].product_name.match(t)&&this.filteredGoods.push(this.allProducts[n])},fetchGoods:function(){var t=this;this.$parent.getJson("/api/products").then((function(n){t.allProducts=n,t.filteredGoods=t.allProducts}))},addPage:function(t){var n={id_product:t};this.$parent.putJson("/api/open",n).then((function(){document.location.href="single_page.html"}))}},mounted:function(){this.fetchGoods()},template:'<ul class="item-card-bar">\n      <product v-for="item of filteredGoods" :key="item.id_product" :product="item"> </product>\n     </ul>'},rendered:{components:{cart:n},data:function(){return{id:3,productsArr:[]}},methods:{fetchGoods:function(){var t=this;this.$parent.getJson("/api/products").then((function(n){t.productsArr=n,t.fetchGetId()}))},fetchGetId:function(){var t=this;this.$parent.getJson("/api/open").then((function(n){n.contents.length>0&&(t.id=n.contents[n.contents.length-1].id_product)}))},addProduct:function(t){var n=this;this.$root.$refs.cart.productsRenderInBasket=[];var s=this.$root.$refs.cart.basket.find((function(n){return n.id_product===t}));if(s)this.$parent.putJson("/api/cart/".concat(s.id_product),{count:1}),s.count++;else{var e=this.productsArr.find((function(n){return n.id_product===t}));e.count=1,this.$parent.postJson("/api/cart",e).then((function(){n.$root.$refs.cart.basket.push(e)}))}this.$root.$refs.cart.productsRenderInBasket=this.$root.$refs.cart.basket.basket}},mounted:function(){this.fetchGoods()},template:'\n  <div>\n  <div class="slider-background">\n  <div class="slider-block">\n    <img\n      class="slider-block-img"\n      width="500px"\n      height="500px"\n      :src="productsArr[id].image"\n      alt="photo"\n    />\n  </div>\n</div>\n<div class="container product-description">\n  <h2 class="heading-collection">NEW COLLECTION</h2>\n  <div class="slider-single">\n    <img src="image/line-single.png" alt="logo" />\n  </div>\n  <h1 class="heading-product">{{productsArr[id].product_name}}</h1>\n  <p class="description">\n    Compellingly actualize fully researched processes before proactive\n    outsourcing. Progressively syndicate collaborative architectures\n    before cutting-edge services. Completely visualize parallel core\n    competencies rather than exceptional portals.\n  </p>\n  <div class="product-center-block">\n    <p class="item-description">\n      <span \n       class="span-item"\n      >MATERIAL: </span>COTTON\n    </p>\n    <p class="item-description">\n      <span class="span-item">DESIGNER: </span>BINBURHAN\n    </p>\n  </div>\n  <p class="product-item-price">$ {{productsArr[id].price.toFixed(2)}}</p>\n  <span @click="$root.$refs.cart.addProduct(id)" class="button-add"\n    ><img\n      class="logo-add-to-cart"\n      src="image/pink-logo-cart.svg"\n      alt="logo"\n    />Add to Cart</span\n  >\n</div></div>'}},data:{singleId:0},methods:{getJson:function(t){var n=this;return fetch(t).then((function(t){return t.json()})).catch((function(t){n.$refs.error.setError(t)}))},postJson:function(t,n){var s=this;return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((function(t){return t.json()})).catch((function(t){s.$refs.error.setError(t)}))},putJson:function(t,n){var s=this;return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((function(t){return t.json()})).catch((function(t){s.$refs.error.setError(t)}))},deleteJson:function(t,n){var s=this;return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((function(t){return t.json()})).catch((function(t){s.$refs.error.setError(t)}))}}},a=(new Vue(e),process.env.PORT||80);e.get("/",(function(t,n){})),e.listen(a,(function(){console.log("Server has been started...")}))})();